{"version":3,"sources":["pages/Home/index.js","logo.svg","App.js","reportWebVitals.js","components/atoms/component/TodoForm.js","components/atoms/component/Todo.js","components/atoms/component/TodoList.js","App1.js","index.js"],"names":["Home","useState","input","setInput","calcBtns","forEach","item","push","onClick","e","target","value","className","substr","length","String","eval","includes","toFixed","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TodoForm","props","edit","inputRef","useRef","useEffect","current","focus","handleChange","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","placeholder","onChange","name","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","updatedTodos","removedArr","filter","todoId","newValue","prev","App1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6741ec5a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './Home.css'\r\nimport {Button, Input, Screen} from '../../components';\r\n\r\nconst Home = () => {\r\n    const [input, setInput] = useState(\"\");\r\n    const calcBtns = [];\r\n    [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, \".\", \"%\"].forEach((item) => {\r\n        calcBtns.push(\r\n            <button onClick ={(e) => {\r\n                setInput(input + e.target.value);\r\n            }}\r\n            value={item}\r\n            key={item}>\r\n                {\" \"}\r\n                {item}\r\n            </button>\r\n        );\r\n    });\r\n\r\n    \r\n  \r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n        {\" \"}\r\n        <div className=\"show-input\">{input}</div>\r\n        <div className=\"digits flex\">{calcBtns}</div>\r\n        <div className=\"modifiers subgrid\">\r\n          {/* clear button */}\r\n  \r\n          <button onClick={() => setInput(input.substr(0, input.length - 1))}>\r\n            Clear\r\n          </button>\r\n  \r\n          {/* clear all */}\r\n          <button onClick={() => setInput(\"\")} value=\"\">\r\n            AC\r\n          </button>\r\n        </div>\r\n        <div className=\"operations subgrid\">\r\n          {/* add button */}\r\n          <button onClick={(e) => setInput(input + e.target.value)} value=\"+\">\r\n            +\r\n          </button>\r\n  \r\n          {/* minus btn */}\r\n          <button onClick={(e) => setInput(input + e.target.value)} value=\"-\">\r\n            {\" \"}\r\n            -{\" \"}\r\n          </button>\r\n  \r\n          <button onClick={(e) => setInput(input + e.target.value)} value=\"*\">\r\n            {\" \"}\r\n            *\r\n          </button>\r\n  \r\n          <button onClick={(e) => setInput(input + e.target.value)} value=\"/\">\r\n            {\" \"}\r\n            /\r\n          </button>\r\n          {/* \"=\" btn */}\r\n          <button\r\n            onClick={(e) => {\r\n              try {\r\n                setInput(\r\n                  String(eval(input)).length > 3 &&\r\n                    String(eval(input)).includes(\".\")\r\n                    ? String(eval(input).toFixed(4))\r\n                    : String(eval(input))\r\n                );\r\n              } catch (e) {\r\n                console.log(e);\r\n              }\r\n            }}\r\n            value=\"=\"\r\n          >\r\n            =\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './Appp.css'\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update your item'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            ref={inputRef}\r\n            className='todo-input edit'\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder='Add a todo'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='todo-input'\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button'>\r\n            Add todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className='edit-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n  };\r\n\r\n  const removeTodo = id => {\r\n    const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>What's the Plan for Today?</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport './Appp.css'\r\nimport TodoList from './components/atoms/component/TodoList';\r\n\r\nfunction App1() {\r\n  return (\r\n    <div className='todo-app'>\r\n      <TodoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App1;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Home} from './pages';\nimport App1 from './App1';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    {/* <Home/> */}\n    <App1/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}